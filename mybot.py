import logging
import requests
import os

from telegram import Update, ReplyKeyboardRemove, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, CallbackContext
from telegram import Bot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
async def start(update: Update, context: CallbackContext):
    user = update.effective_user
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} ({user.full_name}) –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è.")
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –º–µ—Ç–æ–¥–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã
    message = (
        "üåç –í—ã–±–∏—Ä–∞–π, –∫–∞–∫ —Ç—ã —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã —è –æ–ø—Ä–µ–¥–µ–ª–∏–ª —Ç–≤–æ—é —Å—Ç—Ä–∞–Ω—É:\n\n"
        "1Ô∏è‚É£ –í–≤–µ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω—É –≤—Ä—É—á–Ω—É—é ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã.\n"
        "üîí –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –±–æ–ª—å—à–µ –Ω–∏–≥–¥–µ. –ú—ã –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç.\n\n"
        "2Ô∏è‚É£ –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω—É –ø–æ IP-–∞–¥—Ä–µ—Å—É ‚Äî —è –∏—Å–ø–æ–ª—å–∑—É—é API –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–≤–æ–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ IP.\n"
        "‚Ä¢ –ú—ã –ø–æ–ª—É—á–∏–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–∞–Ω—É, –∏ —ç—Ç–æ –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Ç–≤–æ—é –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n\n"
        "3Ô∏è‚É£ –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω—É –ø–æ —è–∑—ã–∫—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ‚Äî —è –æ–ø—Ä–µ–¥–µ–ª—è—é —Å—Ç—Ä–∞–Ω—É —á–µ—Ä–µ–∑ —è–∑—ã–∫, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ —Ç–≤–æ–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.\n"
        "‚Ä¢ –≠—Ç–æ —Ç–æ–∂–µ –Ω–µ –Ω–∞—Ä—É—à–∞–µ—Ç —Ç–≤–æ—é –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å, –∏ –º—ã –≤–∏–¥–∏–º —Ç–æ–ª—å–∫–æ —è–∑—ã–∫."
    )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await update.message.reply_text(
        message,
        reply_markup=ReplyKeyboardMarkup([ 
            [KeyboardButton("\U0001F4CD –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é")],
            [KeyboardButton("\U0001F50D –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ IP-–∞–¥—Ä–µ—Å—É")],
            [KeyboardButton("\U0001F3E0 –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ —è–∑—ã–∫—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞")],
            [KeyboardButton("‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º")]
        ], resize_keyboard=True)
    )

# –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–∏
async def handle_button(update: Update, context: CallbackContext):
    user = update.effective_user
    text = update.message.text

    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} ({user.full_name}) –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: {text}")

    if text == "\U0001F4CD –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é":
        await update.message.reply_text("üìú –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É:")
        return  # –û–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ —Å—Ç—Ä–∞–Ω—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    elif text == "\U0001F50D –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ IP-–∞–¥—Ä–µ—Å—É":
        await update.message.reply_text(
            "üåç –ú—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã –ø–æ —Ç–≤–æ–µ–º—É IP-–∞–¥—Ä–µ—Å—É. "
            "–ú—ã –ø–æ–ª—É—á–∏–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–∞–Ω—É, –∏ –±–æ–ª—å—à–µ –Ω–∏–∫–∞–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–±–µ –Ω–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ."
        )
        # –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã –ø–æ IP
        country = "Russia"  # –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä–∞–Ω—ã, –Ω–∞–π–¥–µ–Ω–Ω–æ–π –ø–æ IP
        await update.message.reply_text(f"üá∑üá∫ –°—Ç—Ä–∞–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∫–∞–∫ {country}.")
        await get_exchange_rate(update, context, country)
    elif text == "\U0001F3E0 –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ —è–∑—ã–∫—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞":
        await update.message.reply_text(
            "üåç –ú—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —è–∑—ã–∫, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ —Ç–≤–æ–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω—É. "
            "–≠—Ç–æ –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Ç–µ–±—è, –∏ –º—ã –≤–∏–¥–∏–º —Ç–æ–ª—å–∫–æ —è–∑—ã–∫."
        )
        # –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã –ø–æ —è–∑—ã–∫—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        language = "ru"  # –ü—Ä–∏–º–µ—Ä —è–∑—ã–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        if language == "ru":
            country = "Russia"
            await update.message.reply_text(f"üá∑üá∫ –°—Ç—Ä–∞–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∫–∞–∫ {country}.")
            await get_exchange_rate(update, context, country)
        else:
            await update.message.reply_text("üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω—É –ø–æ —è–∑—ã–∫—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –≤—Ä—É—á–Ω—É—é.")
    elif text == "‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º":
        await update.message.reply_text("üö´ –†–∞–±–æ—Ç–∞ —Å –±–æ—Ç–æ–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.", reply_markup=ReplyKeyboardRemove())
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –∑–∞–Ω–æ–≤–æ
        await update.message.reply_text(
            "‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
            reply_markup=ReplyKeyboardMarkup([ 
                [KeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]
            ], resize_keyboard=True)
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"
    elif text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await start(update, context)

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã –≤—Ä—É—á–Ω—É—é
    elif text not in ["‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º", "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"]:
        country = text.strip()  # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã, –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        await get_exchange_rate(update, context, country)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ä—É–±–ª—è —á–µ—Ä–µ–∑ API –¶–µ–Ω—Ç—Ä–æ–±–∞–Ω–∫–∞ –†–æ—Å—Å–∏–∏
async def get_exchange_rate(update: Update, context: CallbackContext, country: str):
    try:
        # –ë–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ - —Ä—É–±–ª—å (RUB)
        base_currency = "RUB"

        # URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∫—É—Ä—Å–∞—Ö –≤–∞–ª—é—Ç –æ—Ç –¶–µ–Ω—Ç—Ä–æ–±–∞–Ω–∫–∞ –†–æ—Å—Å–∏–∏
        url = "https://www.cbr-xml-daily.ru/daily_json.js"
        response = requests.get(url)
        data = response.json()

        if 'Valute' not in data:
            await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∫—É—Ä—Å–∞—Ö –≤–∞–ª—é—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
            return

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –¥–ª—è –Ω—É–∂–Ω—ã—Ö –≤–∞–ª—é—Ç
        exchange_rates = {
            "USD": data['Valute']['USD']['Value'],
            "EUR": data['Valute']['EUR']['Value'],
            "BYN": data['Valute']['BYN']['Value'],
            "CNY": data['Valute']['CNY']['Value'],
            "UAH": data['Valute']['UAH']['Value']
        }

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫—É—Ä—Å–∞–º–∏ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        rate_message = f"üí∏ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –¥–ª—è {country}:\n"
        for code, rate in exchange_rates.items():
            country_flag = get_country_flag(code)  # –ü–æ–ª—É—á–∞–µ–º —Ñ–ª–∞–≥ —Å—Ç—Ä–∞–Ω—ã
            rate_message += f"{country_flag} 1 {code} = {rate} RUB\n"

        await update.message.reply_text(rate_message)

        # –ú–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ –≤—ã–±–æ—Ä –±–∞–∑–æ–≤–æ–π –≤–∞–ª—é—Ç—ã
        await update.message.reply_text(
            "üîÑ –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–∞–Ω—É, –æ—Å—Ç–∞–Ω–æ–≤–∏ —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º –∏ –Ω–∞—á–Ω–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—É –∑–∞–Ω–æ–≤–æ. –£–≤—ã, –ø–æ–∫–∞ –¥–∞–∂–µ —Å –∫–æ—Å—Ç—ã–ª–µ–º —Å–¥–µ–ª–∞—Ç—å —Å–º–µ–Ω—É —Å—Ç—Ä–∞–Ω—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å.",
            reply_markup=ReplyKeyboardMarkup([ 
                [KeyboardButton("‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º")]
            ], resize_keyboard=True)
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç: {e}")
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–ª–∞–≥–∞ —Å—Ç—Ä–∞–Ω—ã –ø–æ –∫–æ–¥—É –≤–∞–ª—é—Ç—ã
def get_country_flag(currency_code):
    flags = {
        "USD": "üá∫üá∏",  # –°–®–ê
        "EUR": "üá™üá∫",  # –ï–≤—Ä–æ–∑–æ–Ω–∞
        "BYN": "üáßüáæ",  # –ë–µ–ª–∞—Ä—É—Å—å
        "CNY": "üá®üá≥",  # –ö–∏—Ç–∞–π
        "UAH": "üá∫üá¶",  # –£–∫—Ä–∞–∏–Ω–∞
    }
    return flags.get(currency_code, "üè≥Ô∏è")  # –ï—Å–ª–∏ —Ñ–ª–∞–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Ñ–ª–∞–≥

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
token = os.getenv('TELEGRAM_TOKEN')

# –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç application —Å —Ç–æ–∫–µ–Ω–æ–º
    application = ApplicationBuilder().token(token).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_button))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()