import logging
import requests
from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackContext

# –ù–∞—Å—Ç—Ä–æ–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–ª–æ–≤–∞—Ä—å —Å—Ç—Ä–∞–Ω –∏ –∏—Ö –≤–∞–ª—é—Ç —Å —Ñ–ª–∞–≥–∞–º–∏
country_currency_map = {
    "–ë–µ–ª–∞—Ä—É—Å—å": ("BYN", "üáßüáæ"),
    "–£–∫—Ä–∞–∏–Ω–∞": ("UAH", "üá∫üá¶"),
    "–°–®–ê": ("USD", "üá∫üá∏"),
    "–†–æ—Å—Å–∏—è": ("RUB", "üá∑üá∫"),
    "–ï–≤—Ä–æ–∑–æ–Ω–∞": ("EUR", "üá™üá∫"),
    "–ö–∏—Ç–∞–π": ("CNY", "üá®üá≥"),
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
async def get_exchange_rate(update: Update, context: CallbackContext):
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω—É –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∫–æ–º–∞–Ω–¥—ã
        if context.args:
            country = ' '.join(context.args)
        else:
            await update.message.reply_text("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /exchange_rate.")
            return

        # –ï—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∞ "–†–æ—Å—Å–∏—è", —Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å RUB
        if country == "–†–æ—Å—Å–∏—è":
            country_currency = "RUB"
            flag = "üá∑üá∫"
        else:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤ —Å–ª–æ–≤–∞—Ä–µ
            if country not in country_currency_map:
                await update.message.reply_text(f"‚ö†Ô∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –∑–Ω–∞—é –∫—É—Ä—Å –¥–ª—è {country}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω—É.")
                return

            # –ü–æ–ª—É—á–∞–µ–º –≤–∞–ª—é—Ç—É –∏ —Ñ–ª–∞–≥
            country_currency, flag = country_currency_map[country]

        # URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∫—É—Ä—Å–∞—Ö –≤–∞–ª—é—Ç –æ—Ç –¶–µ–Ω—Ç—Ä–æ–±–∞–Ω–∫–∞ –†–æ—Å—Å–∏–∏
        url = "https://www.cbr-xml-daily.ru/daily_json.js"
        response = requests.get(url)

        if response.status_code != 200:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å API: {response.status_code}")
            await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∫—É—Ä—Å–∞—Ö –≤–∞–ª—é—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
            return

        data = response.json()

        if 'Valute' not in data:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç API: {data}")
            await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∫—É—Ä—Å–∞—Ö –≤–∞–ª—é—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
            return

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
        exchange_rates = {
            "USD": data['Valute']['USD']['Value'],
            "EUR": data['Valute']['EUR']['Value'],
            "BYN": data['Valute']['BYN']['Value'],
            "CNY": data['Valute']['CNY']['Value'],
            "UAH": data['Valute']['UAH']['Value'],
            "RUB": data['Valute']['RUB']['Value']
        }

        rate_message = f"üí∏ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –¥–ª—è {flag} {country} ({country_currency}):\n"
        for code, rate in exchange_rates.items():
            if code == country_currency:
                continue
            flag_for_code = {
                "USD": "üá∫üá∏",
                "EUR": "üá™üá∫",
                "BYN": "üáßüáæ",
                "CNY": "üá®üá≥",
                "UAH": "üá∫üá¶",
                "RUB": "üá∑üá∫"
            }
            rate_message += f"{flag_for_code.get(code, '')} {code}: 1 {country_currency} = {rate:.2f} {code}\n"

        await update.message.reply_text(rate_message)

    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {e}")
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    # –í—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
    token = '7550339760:AAHD-IdefcXzLER99r9_6zN32GT8g2HlnvU'
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Application –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω
    application = Application.builder().token(token).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    application.add_handler(CommandHandler('start', start))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /exchange_rate —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —Å—Ç—Ä–∞–Ω—ã
    application.add_handler(CommandHandler('exchange_rate', get_exchange_rate))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
def start(update: Update, context: CallbackContext):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /exchange_rate <—Å—Ç—Ä–∞–Ω–∞>, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å.")

if __name__ == '__main__':
    main()
